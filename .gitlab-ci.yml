image: docker:19.03.12

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
  - build
  - test
  - push
  - deploy

Build:
  stage: build
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - docker pull $CI_REGISTRY_IMAGE || true
    - > 
        docker build
        --cache-from $CI_REGISTRY_IMAGE
        --tag $CI_REGISTRY_IMAGE:temp
        .
    - docker push $CI_REGISTRY_IMAGE:temp

Run linter:
  stage: test
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  variables:
    GIT_STRATEGY: none
  script:
    - >
      docker container run
      --rm
      $CI_REGISTRY_IMAGE:temp
      run linter
      
Run unit tests:
  stage: test
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  variables:
    GIT_STRATEGY: none
  script:
    - >
      docker container run
      --rm
      $CI_REGISTRY_IMAGE:temp
      test

Push tag image:
  stage: push
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_IMAGE:temp
    - docker tag $CI_REGISTRY_IMAGE:temp $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

Push develop image:
  stage: push
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_IMAGE:temp
    - docker tag $CI_REGISTRY_IMAGE:temp $CI_REGISTRY_IMAGE:develop
    - docker push $CI_REGISTRY_IMAGE:develop

Deploy to develop:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
  variables:
    GIT_STRATEGY: none
  script:
    - docker container stop develop_to-do-api || true
    - docker container rm develop_to-do-api || true
    - >
      docker container run
      --publish 3001:3000
      --name develop_to-do-api
      --detach
      --restart unless-stopped
      $CI_REGISTRY/alvarogarciafer/to-do-api:develop
      run start-develop

Manual deploy to develop:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
    - docker container stop develop_to-do-api || true
    - docker container rm develop_to-do-api || true
    - >
      docker container run
      --publish 3001:3000
      --name develop_to-do-api
      --detach
      --restart unless-stopped
      $CI_REGISTRY/alvarogarciafer/to-do-api:develop
      run start-develop
      
Push production image:
  stage: push
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  variables:
    GIT_STRATEGY: none
  script:
    - docker pull $CI_REGISTRY_IMAGE:temp
    - docker tag $CI_REGISTRY_IMAGE:temp $CI_REGISTRY_IMAGE
    - docker push $CI_REGISTRY_IMAGE

Deploy to production:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
  variables:
    GIT_STRATEGY: none
  script:
    - docker container stop to-do-api || true
    - docker container rm to-do-api || true
    - >
      docker container run
      --publish 3000:3000
      --name to-do-api
      --detach
      --restart unless-stopped
      $CI_REGISTRY/alvarogarciafer/to-do-api
      run start

Manual deploy to production:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
    - docker container stop to-do-api || true
    - docker container rm to-do-api || true
    - >
      docker container run
      --publish 3000:3000
      --name to-do-api
      --detach
      --restart unless-stopped
      $CI_REGISTRY/alvarogarciafer/to-do-api
      run start
