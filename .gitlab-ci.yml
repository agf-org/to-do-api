image: docker:19.03.12

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - >
    if [ "$CI_COMMIT_BRANCH" == "master" ]; then
      ENVIRONMENT_NAME="production"
      IMAGE_TAG="latest"
      CONTAINER_NAME="to-do-api"
    else
      ENVIRONMENT_NAME="development"
      IMAGE_TAG="$CI_COMMIT_BRANCH"
      CONTAINER_NAME=""$CI_COMMIT_BRANCH"_to-do-api"
    fi

stages:
  - prepare-test
  - test
  - build
  - deploy

build_test:
  stage: prepare-test
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - docker pull $CI_REGISTRY_IMAGE:test || true
    - > 
      docker build
      --cache-from $CI_REGISTRY_IMAGE
      --tag $CI_REGISTRY_IMAGE:test
      .
    - docker push $CI_REGISTRY_IMAGE:test

run_linter:
  stage: test
  variables:
    GIT_STRATEGY: none
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - >
      docker container run
      --rm
      $CI_REGISTRY_IMAGE:test
      run linter
      
run_unit_tests:
  stage: test
  variables:
    GIT_STRATEGY: none
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - >
      docker container run
      --rm
      $CI_REGISTRY_IMAGE:test
      test

build:
  stage: build
  environment:
    name: $ENVIRONMENT_NAME
    action: prepare
  rules:
    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - docker pull $CI_REGISTRY_IMAGE:$IMAGE_TAG || true
    - > 
      docker build
      --cache-from $CI_REGISTRY_IMAGE:$IMAGE_TAG
      --tag $CI_REGISTRY_IMAGE:$IMAGE_TAG
      .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

build_tag:
  stage: build
  variables:
    GIT_STRATEGY: none   
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

deploy:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  environment:
    name: $ENVIRONMENT_NAME
    action: start
    on_stop: manual_stop
  rules:
    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - docker container stop $CONTAINER_NAME || true
    - docker container rm $CONTAINER_NAME || true
    - echo "NODE_ENV=$NODE_ENV" >> .env
    - >
      docker container run
      --env-file .env
      --publish $PORT:3000
      --name $CONTAINER_NAME
      --detach
      --restart unless-stopped
      $CI_REGISTRY_IMAGE:$IMAGE_TAG
      start
    - rm .env

manual_stop:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  environment:
    name: $ENVIRONMENT_NAME
    action: stop
  rules:
    - if: ($CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
      when: manual
      allow_failure: true
  script:
    - docker container stop $CONTAINER_NAME || true
    - docker container rm $CONTAINER_NAME || true
