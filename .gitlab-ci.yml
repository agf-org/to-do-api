image: docker:19.03.12

include:
  - local: 'ci/development-ci.yml'
  - local: 'ci/production-cy.yml'

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
  - prepare-test
  - test
  - build
  - deploy

build_test:
  stage: prepare-test
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - docker pull $CI_REGISTRY_IMAGE:test || true
    - > 
      docker build
      --cache-from $CI_REGISTRY_IMAGE
      --tag $CI_REGISTRY_IMAGE:test
      .
    - docker push $CI_REGISTRY_IMAGE:test

run_linter:
  stage: test
  variables:
    GIT_STRATEGY: none
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - >
      docker container run
      --rm
      $CI_REGISTRY_IMAGE:test
      run linter
      
run_unit_tests:
  stage: test
  variables:
    GIT_STRATEGY: none
  rules:
    - if: ($CI_MERGE_REQUEST_IID || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master")
  script:
    - >
      docker container run
      --rm
      $CI_REGISTRY_IMAGE:test
      test

build_tag:
  stage: build
  variables:
    GIT_STRATEGY: none   
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:latest $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
