name: main

env:
  DOCKER_REPOSITORY: 'alvarogarciafer/to-do-api'
  CONTAINER_NAME: 'to-do-api'
  NODE_ENV: 'production'
  PORT: '3000'

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  test:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Build Docker images
        uses: docker/build-push-action@v2
        with:
          tags: ${{ env.DOCKER_REPOSITORY }}:test
          
      - name: Run linter
        run: |
          docker container run \
          --rm \
          ${{ env.DOCKER_REPOSITORY }}:test \
          run linter

      - name: Run unit tests
        run: |
          docker container run \
          --rm \
          ${{ env.DOCKER_REPOSITORY }}:test \
          test

  build:
    runs-on: self-hosted
    needs: test
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Autotag package
        uses: butlerlogic/action-autotag@stable
        id: action-autotag
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          strategy: package
          tag_prefix: v

      - name: Get tags
        id: get-tags
        run: |
          TAGS="${{ env.DOCKER_REPOSITORY }}:latest"
          if [[ "${{ steps.action-autotag.outputs.tagname }}" != "" ]]; then
            TAGS="$TAGS,${{ env.DOCKER_REPOSITORY }}:${{ steps.action-autotag.outputs.tagname }}"
          fi
          echo ::set-output name=tags::${TAGS}

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.get-tags.outputs.tags }}
          
  deploy:
    runs-on: self-hosted
    needs: build
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Deploy containers
        run: |
          docker container stop ${{ env.CONTAINER_NAME}} || true
          docker container rm ${{ env.CONTAINER_NAME}} || true
          docker image pull ${{ env.DOCKER_REPOSITORY}}:latest
          echo "NODE_ENV=${{ env.NODE_ENV }}" >> .env
          docker container run \
          --env-file .env \
          --publish ${{ env.PORT }}:3000 \
          --name ${{ env.CONTAINER_NAME}} \
          --detach \
          --restart unless-stopped \
          ${{ env.DOCKER_REPOSITORY}}:latest \
          start
          rm .env
